generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


enum Category {
  SCOOTER
  HEAVY
  STROKE
}

enum OrderStatus {
  CREATED
  CANCELLED
  CONFIRMED
  DELIVERY_STARTED
  COMPLETED
}

model ImageResource {
  id                    Int                     @id @default(autoincrement())
  filename              String
  s3Key                 String
  createdAt             DateTime                @default(now())
  GenericMotorbikeImage GenericMotorbikeImage[]
}

model GenericMotorbike {
  id                    Int                     @id @default(autoincrement())
  category              Category
  model                 String
  name                  String
  recommendedPrice      Int
  description           String?                 @db.Text  
  colorInHex            String?                 @db.Char(7)
  colorName             String?
  engineSpecs           Json?
  chassisSpecs          Json?
  warrantySpecs         Json?
  isAvailable           Boolean                 @default(true)
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  images                GenericMotorbikeImage[]
  motorbikes            Motorbike[]
  orderCartItems        OrderCartItem[]
}

model GenericMotorbikeImage {
  id                 Int              @id @default(autoincrement())
  genericMotorbikeId Int
  imageResourceId    Int
  isGallery          Boolean          @default(false)
  createdAt          DateTime         @default(now())
  genericMotorbike   GenericMotorbike @relation(fields: [genericMotorbikeId], references: [id])
  imageResource      ImageResource    @relation(fields: [imageResourceId], references: [id])
}

model Motorbike {
  id                    Int               @id @default(autoincrement())
  genericMotorbikeId    Int
  chassisCode           String?
  engineCode            String?
  price                 Int
  arrivedToInventoryAt  DateTime?
  isSold                Boolean           @default(false)
  createdAt             DateTime          @default(now())
  updatedAt             DateTime          @updatedAt
  genericMotorbike      GenericMotorbike  @relation(fields: [genericMotorbikeId], references: [id])
  orderItems            OrderItem[]
}

model Order {
  id                Int         @id @default(autoincrement())
  publicOrderId     String      @unique
  status            OrderStatus @default(CREATED)
  total             Int
  cancelReason      String?
  createdAt         DateTime    @default(now())
  confirmedAt       DateTime?
  startedDeliveryAt DateTime?
  completedAt       DateTime?
  cancelledAt       DateTime?
  customerName      String
  customerPhone     String
  customerAddress   String
  customerEmail     String
  orderItems        OrderItem[]
  orderCartItems    OrderCartItem[]
  charge            Charge?
}

model Charge {
  id              Int       @id @default(autoincrement())
  transaction_id  String    @unique
  orderId         Int       @unique
  amount          Int
  createdAt       DateTime  @default(now())
  order           Order     @relation(fields: [orderId], references: [id])
}

model OrderCartItem {
  id                  Int       @id @default(autoincrement())
  orderId             Int
  genericMotorbikeId  Int
  quantity            Int
  createdAt           DateTime  @default(now())
  order               Order     @relation(fields: [orderId], references: [id])
  genericMotorbike    GenericMotorbike @relation(fields: [genericMotorbikeId], references: [id])
}

model OrderItem {
  id          Int       @id @default(autoincrement())
  orderId     Int
  motorbikeId Int
  createdAt   DateTime  @default(now())
  order       Order     @relation(fields: [orderId], references: [id])
  motorbike   Motorbike @relation(fields: [motorbikeId], references: [id])
}

model User {
  id           Int      @id @default(autoincrement())
  username     String   @unique
  passwordHash String
  isAdmin      Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}